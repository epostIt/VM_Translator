@256 // 0
D=A // 1
@SP // 2
M=D // 3
@Sys.initRET0 // 4
D=A // 5
@SP // 6
A=M // 7
M=D // 8
@SP // 9
M=M+1 // 10
@LCL // 11
D=M // 12
@SP // 13
A=M // 14
M=D // 15
@SP // 16
M=M+1 // 17
@ARG // 18
D=M // 19
@SP // 20
A=M // 21
M=D // 22
@SP // 23
M=M+1 // 24
@THIS // 25
D=M // 26
@SP // 27
A=M // 28
M=D // 29
@SP // 30
M=M+1 // 31
@THAT // 32
D=M // 33
@SP // 34
A=M // 35
M=D // 36
@SP // 37
M=M+1 // 38
@SP // 39
D=M // 40
@LCL // 41
M=D // 42
@5 // 43
D=D-A // 44
@ARG // 45
M=D // 46
@Sys.init // 47
0;JMP // 48
(Sys.initRET0)
//////
// FullTest
// function mult
Command improperly formatted // 49
// push constant -10
D=A // 50
@SP // 51
A=M // 52
M=D // 53
@SP // 54
M=M+1 // 55
// pop local
Command improperly formatted // 56
// push argument 1
@ARG // 57
D=M // 58
@1 // 59
A=D+A // 60
D=M // 61
@SP // 62
A=M // 63
M=D // 64
@SP // 65
M=M+1 // 66
// pop local 1
@LCL // 67
D=M // 68
@1 // 69
A=D+A // 70
D=A // 71
@R13 // 72
M=D // 73
@SP // 74
M=M-1 // 75
A=M // 76
D=M // 77
@R13 // 78
A=M // 79
M=D // 80
// label end
(FullTest$end)
// push local 0
@LCL // 81
D=M // 82
@0 // 83
A=D+A // 84
D=M // 85
@SP // 86
A=M // 87
M=D // 88
@SP // 89
M=M+1 // 90
// return
@LCL // 91
D=M // 92
@R13 // 93
M=D // 94
@R13 // 95
D=M // 96
@5 // 97
D=D-A // 98
A=D // 99
D=M // 100
@R14 // 101
M=D // 102
@SP // 103
M=M-1 // 104
A=M // 105
D=M // 106
@ARG // 107
A=M // 108
M=D // 109
@ARG // 110
D=M // 111
@SP // 112
M=D+1 // 113
@R13 // 114
D=M // 115
@1 // 116
D=D-A // 117
A=D // 118
D=M // 119
@THAT // 120
M=D // 121
@R13 // 122
D=M // 123
@2 // 124
D=D-A // 125
A=D // 126
D=M // 127
@THIS // 128
M=D // 129
@R13 // 130
D=M // 131
@3 // 132
D=D-A // 133
A=D // 134
D=M // 135
@ARG // 136
M=D // 137
@R13 // 138
D=M // 139
@4 // 140
D=D-A // 141
A=D // 142
D=M // 143
@LCL // 144
M=D // 145
@R14 // 146
A=M // 147
0;JMP // 148
// label loop
(FullTest$loop)
// push constant 0
@0 // 149
D=A // 150
@SP // 151
A=M // 152
M=D // 153
@SP // 154
M=M+1 // 155
// push local 1
@LCL // 156
D=M // 157
@1 // 158
A=D+A // 159
D=M // 160
@SP // 161
A=M // 162
M=D // 163
@SP // 164
M=M+1 // 165
// eq
@SP // 166
M=M-1 // 167
A=M // 168
D=M // 169
@SP // 170
M=M-1 // 171
@SP // 172
A=M // 173
D=M-D // 174
@BOOL0 // 175
D;JEQ // 176
@SP // 177
A=M // 178
M=0 // 179
@ENDBOOL0 // 180
0;JMP // 181
(BOOL0)
@SP // 182
A=M // 183
M=-1 // 184
(ENDBOOL0)
@SP // 185
M=M+1 // 186
// if-goto end
@SP // 187
M=M-1 // 188
A=M // 189
D=M // 190
@FullTest$end // 191
D;JNE // 192
// push local 0
@LCL // 193
D=M // 194
@0 // 195
A=D+A // 196
D=M // 197
@SP // 198
A=M // 199
M=D // 200
@SP // 201
M=M+1 // 202
// push argument 0
@ARG // 203
D=M // 204
@0 // 205
A=D+A // 206
D=M // 207
@SP // 208
A=M // 209
M=D // 210
@SP // 211
M=M+1 // 212
// add
@SP // 213
M=M-1 // 214
A=M // 215
D=M // 216
@SP // 217
M=M-1 // 218
@SP // 219
A=M // 220
M=M+D // 221
@SP // 222
M=M+1 // 223
// pop local 0
@LCL // 224
D=M // 225
@0 // 226
A=D+A // 227
D=A // 228
@R13 // 229
M=D // 230
@SP // 231
M=M-1 // 232
A=M // 233
D=M // 234
@R13 // 235
A=M // 236
M=D // 237
// push local 1
@LCL // 238
D=M // 239
@1 // 240
A=D+A // 241
D=M // 242
@SP // 243
A=M // 244
M=D // 245
@SP // 246
M=M+1 // 247
// push constant 1
@1 // 248
D=A // 249
@SP // 250
A=M // 251
M=D // 252
@SP // 253
M=M+1 // 254
// sub
@SP // 255
M=M-1 // 256
A=M // 257
D=M // 258
@SP // 259
M=M-1 // 260
@SP // 261
A=M // 262
M=M-D // 263
@SP // 264
M=M+1 // 265
// pop local 1
@LCL // 266
D=M // 267
@1 // 268
A=D+A // 269
D=A // 270
@R13 // 271
M=D // 272
@SP // 273
M=M-1 // 274
A=M // 275
D=M // 276
@R13 // 277
A=M // 278
M=D // 279
// goto unknown
