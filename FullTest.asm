@256 // 0
D=A // 1
@SP // 2
M=D // 3
@Sys.initRET0 // 4
D=A // 5
@SP // 6
A=M // 7
M=D // 8
@SP // 9
M=M+1 // 10
@LCL // 11
D=M // 12
@SP // 13
A=M // 14
M=D // 15
@SP // 16
M=M+1 // 17
@ARG // 18
D=M // 19
@SP // 20
A=M // 21
M=D // 22
@SP // 23
M=M+1 // 24
@THIS // 25
D=M // 26
@SP // 27
A=M // 28
M=D // 29
@SP // 30
M=M+1 // 31
@THAT // 32
D=M // 33
@SP // 34
A=M // 35
M=D // 36
@SP // 37
M=M+1 // 38
@SP // 39
D=M // 40
@LCL // 41
M=D // 42
@5 // 43
D=D-A // 44
@ARG // 45
M=D // 46
@Sys.init // 47
0;JMP // 48
(Sys.initRET0)
//////
// FullTest
// function mult
Command improperly formatted // 49
// push constant 0
@0 // 50
D=A // 51
@SP // 52
A=M // 53
M=D // 54
@SP // 55
M=M+1 // 56
// pop local
Command improperly formatted // 57
// push argument 1
@ARG // 58
D=M // 59
@1 // 60
A=D+A // 61
D=M // 62
@SP // 63
A=M // 64
M=D // 65
@SP // 66
M=M+1 // 67
// pop local 1
@LCL // 68
D=M // 69
@1 // 70
A=D+A // 71
D=A // 72
@R13 // 73
M=D // 74
@SP // 75
M=M-1 // 76
A=M // 77
D=M // 78
@R13 // 79
A=M // 80
M=D // 81
// label end
(FullTest$end)
// push local 0
@LCL // 82
D=M // 83
@0 // 84
A=D+A // 85
D=M // 86
@SP // 87
A=M // 88
M=D // 89
@SP // 90
M=M+1 // 91
// return
@LCL // 92
D=M // 93
@R13 // 94
M=D // 95
@R13 // 96
D=M // 97
@5 // 98
D=D-A // 99
A=D // 100
D=M // 101
@R14 // 102
M=D // 103
@SP // 104
M=M-1 // 105
A=M // 106
D=M // 107
@ARG // 108
A=M // 109
M=D // 110
@ARG // 111
D=M // 112
@SP // 113
M=D+1 // 114
@R13 // 115
D=M // 116
@1 // 117
D=D-A // 118
A=D // 119
D=M // 120
@THAT // 121
M=D // 122
@R13 // 123
D=M // 124
@2 // 125
D=D-A // 126
A=D // 127
D=M // 128
@THIS // 129
M=D // 130
@R13 // 131
D=M // 132
@3 // 133
D=D-A // 134
A=D // 135
D=M // 136
@ARG // 137
M=D // 138
@R13 // 139
D=M // 140
@4 // 141
D=D-A // 142
A=D // 143
D=M // 144
@LCL // 145
M=D // 146
@R14 // 147
A=M // 148
0;JMP // 149
// label loop
(FullTest$loop)
(FullTest$loop)
// push constant 0
@0 // 150
D=A // 151
@SP // 152
A=M // 153
M=D // 154
@SP // 155
M=M+1 // 156
// push local 1
@LCL // 157
D=M // 158
@1 // 159
A=D+A // 160
D=M // 161
@SP // 162
A=M // 163
M=D // 164
@SP // 165
M=M+1 // 166
// eq
@SP // 167
M=M-1 // 168
A=M // 169
D=M // 170
@SP // 171
M=M-1 // 172
@SP // 173
A=M // 174
D=M-D // 175
@BOOL0 // 176
D;JEQ // 177
@SP // 178
A=M // 179
M=0 // 180
@ENDBOOL0 // 181
0;JMP // 182
(BOOL0)
@SP // 183
A=M // 184
M=-1 // 185
(ENDBOOL0)
@SP // 186
M=M+1 // 187
// if-goto end
@SP // 188
M=M-1 // 189
A=M // 190
D=M // 191
@FullTest$end // 192
D;JNE // 193
// push local 0
@LCL // 194
D=M // 195
@0 // 196
A=D+A // 197
D=M // 198
@SP // 199
A=M // 200
M=D // 201
@SP // 202
M=M+1 // 203
// push argument 0
@ARG // 204
D=M // 205
@0 // 206
A=D+A // 207
D=M // 208
@SP // 209
A=M // 210
M=D // 211
@SP // 212
M=M+1 // 213
// add
@SP // 214
M=M-1 // 215
A=M // 216
D=M // 217
@SP // 218
M=M-1 // 219
@SP // 220
A=M // 221
M=M+D // 222
@SP // 223
M=M+1 // 224
// pop local 0
@LCL // 225
D=M // 226
@0 // 227
A=D+A // 228
D=A // 229
@R13 // 230
M=D // 231
@SP // 232
M=M-1 // 233
A=M // 234
D=M // 235
@R13 // 236
A=M // 237
M=D // 238
// push local 1
@LCL // 239
D=M // 240
@1 // 241
A=D+A // 242
D=M // 243
@SP // 244
A=M // 245
M=D // 246
@SP // 247
M=M+1 // 248
// push constant 1
@1 // 249
D=A // 250
@SP // 251
A=M // 252
M=D // 253
@SP // 254
M=M+1 // 255
// sub
@SP // 256
M=M-1 // 257
A=M // 258
D=M // 259
@SP // 260
M=M-1 // 261
@SP // 262
A=M // 263
M=M-D // 264
@SP // 265
M=M+1 // 266
// pop local 1
@LCL // 267
D=M // 268
@1 // 269
A=D+A // 270
D=A // 271
@R13 // 272
M=D // 273
@SP // 274
M=M-1 // 275
A=M // 276
D=M // 277
@R13 // 278
A=M // 279
M=D // 280
// goto unknown
