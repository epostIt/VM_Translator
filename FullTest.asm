@256 // 0
D=A // 1
@SP // 2
M=D // 3
@Sys.initRET0 // 4
D=A // 5
@SP // 6
A=M // 7
M=D // 8
@SP // 9
M=M+1 // 10
@LCL // 11
D=M // 12
@SP // 13
A=M // 14
M=D // 15
@SP // 16
M=M+1 // 17
@ARG // 18
D=M // 19
@SP // 20
A=M // 21
M=D // 22
@SP // 23
M=M+1 // 24
@THIS // 25
D=M // 26
@SP // 27
A=M // 28
M=D // 29
@SP // 30
M=M+1 // 31
@THAT // 32
D=M // 33
@SP // 34
A=M // 35
M=D // 36
@SP // 37
M=M+1 // 38
@SP // 39
D=M // 40
@LCL // 41
M=D // 42
@5 // 43
D=D-A // 44
@ARG // 45
M=D // 46
@Sys.init // 47
0;JMP // 48
(Sys.initRET0)
//////
// FullTest
// function mult
Command improperly formatted // 49
// push constant 0
@0 // 50
D=A // 51
@SP // 52
A=M // 53
M=D // 54
@SP // 55
M=M+1 // 56
// pop local 0
@LCL // 57
D=M // 58
@0 // 59
A=D+A // 60
D=A // 61
@R13 // 62
M=D // 63
@SP // 64
M=M-1 // 65
A=M // 66
D=M // 67
@R13 // 68
A=M // 69
M=D // 70
// push argument 1
@ARG // 71
D=M // 72
@1 // 73
A=D+A // 74
D=M // 75
@SP // 76
A=M // 77
M=D // 78
@SP // 79
M=M+1 // 80
// pop local 1
@LCL // 81
D=M // 82
@1 // 83
A=D+A // 84
D=A // 85
@R13 // 86
M=D // 87
@SP // 88
M=M-1 // 89
A=M // 90
D=M // 91
@R13 // 92
A=M // 93
M=D // 94
// label end
(FullTest$end)
// push local 0
@LCL // 95
D=M // 96
@0 // 97
A=D+A // 98
D=M // 99
@SP // 100
A=M // 101
M=D // 102
@SP // 103
M=M+1 // 104
// return
@LCL // 105
D=M // 106
@R13 // 107
M=D // 108
@R13 // 109
D=M // 110
@5 // 111
D=D-A // 112
A=D // 113
D=M // 114
@R14 // 115
M=D // 116
@SP // 117
M=M-1 // 118
A=M // 119
D=M // 120
@ARG // 121
A=M // 122
M=D // 123
@ARG // 124
D=M // 125
@SP // 126
M=D+1 // 127
@R13 // 128
D=M // 129
@1 // 130
D=D-A // 131
A=D // 132
D=M // 133
@THAT // 134
M=D // 135
@R13 // 136
D=M // 137
@2 // 138
D=D-A // 139
A=D // 140
D=M // 141
@THIS // 142
M=D // 143
@R13 // 144
D=M // 145
@3 // 146
D=D-A // 147
A=D // 148
D=M // 149
@ARG // 150
M=D // 151
@R13 // 152
D=M // 153
@4 // 154
D=D-A // 155
A=D // 156
D=M // 157
@LCL // 158
M=D // 159
@R14 // 160
A=M // 161
0;JMP // 162
// label loop
(FullTest$loop)
// push constant 0
@0 // 163
D=A // 164
@SP // 165
A=M // 166
M=D // 167
@SP // 168
M=M+1 // 169
// push local 1
@LCL // 170
D=M // 171
@1 // 172
A=D+A // 173
D=M // 174
@SP // 175
A=M // 176
M=D // 177
@SP // 178
M=M+1 // 179
// eq
@SP // 180
M=M-1 // 181
A=M // 182
D=M // 183
@SP // 184
M=M-1 // 185
@SP // 186
A=M // 187
D=M-D // 188
@BOOL0 // 189
D;JEQ // 190
@SP // 191
A=M // 192
M=0 // 193
@ENDBOOL0 // 194
0;JMP // 195
(BOOL0)
@SP // 196
A=M // 197
M=-1 // 198
(ENDBOOL0)
@SP // 199
M=M+1 // 200
// if-goto end
@SP // 201
M=M-1 // 202
A=M // 203
D=M // 204
@FullTest$end // 205
D;JNE // 206
// push local 0
@LCL // 207
D=M // 208
@0 // 209
A=D+A // 210
D=M // 211
@SP // 212
A=M // 213
M=D // 214
@SP // 215
M=M+1 // 216
// push argument 0
@ARG // 217
D=M // 218
@0 // 219
A=D+A // 220
D=M // 221
@SP // 222
A=M // 223
M=D // 224
@SP // 225
M=M+1 // 226
// add
@SP // 227
M=M-1 // 228
A=M // 229
D=M // 230
@SP // 231
M=M-1 // 232
@SP // 233
A=M // 234
M=M+D // 235
@SP // 236
M=M+1 // 237
// pop local 0
@LCL // 238
D=M // 239
@0 // 240
A=D+A // 241
D=A // 242
@R13 // 243
M=D // 244
@SP // 245
M=M-1 // 246
A=M // 247
D=M // 248
@R13 // 249
A=M // 250
M=D // 251
// push local 1
@LCL // 252
D=M // 253
@1 // 254
A=D+A // 255
D=M // 256
@SP // 257
A=M // 258
M=D // 259
@SP // 260
M=M+1 // 261
// push constant 1
@1 // 262
D=A // 263
@SP // 264
A=M // 265
M=D // 266
@SP // 267
M=M+1 // 268
// sub
@SP // 269
M=M-1 // 270
A=M // 271
D=M // 272
@SP // 273
M=M-1 // 274
@SP // 275
A=M // 276
M=M-D // 277
@SP // 278
M=M+1 // 279
// pop local 1
@LCL // 280
D=M // 281
@1 // 282
A=D+A // 283
D=A // 284
@R13 // 285
M=D // 286
@SP // 287
M=M-1 // 288
A=M // 289
D=M // 290
@R13 // 291
A=M // 292
M=D // 293
// goto unknown
